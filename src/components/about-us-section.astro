---
import { Image } from "astro:assets";
import { getEntry } from "astro:content";
import { SECTION_DEFS } from "../constants";
import type { AboutUs, ContentSection } from "../content/types";
import { getManagedImage } from "../helpers/media";
import Icon from "./common/icon.astro";
import Markdown from "./common/markdown.astro";
import PageSection from "./common/page-section.astro";

const {
  data: { title, description, image, locationCard, businessCard, serviceCard },
} = (await getEntry("home-page", "about-us")) as ContentSection<AboutUs>;

const cardIcons = ["location-lrg", "business-lrg", "service-lrg"];
const { sectionId, sectionClass } = SECTION_DEFS["about-us"];
---

<PageSection>
  <div id={sectionId} class:list={[sectionClass, "offset-section"]}>
    <div
      class={`
        glassy glass-full glass-card glass-responsive p-0 text-empty flex gap-[var(--site-space-x)] flex-wrap [&_>_*]:flex-[1_1_24rem] transition-all
        motion-safe:opacity-0 intersect:animate-fade-up intersect-once intersect-th-0.1 motion-reduce:intersect:animate-none
        sm:p-[var(--site-space-x)] sm:py-[calc(var(--site-space-x)*1.5)]
      `}
    >
      {
        !!image?.length &&
          image.map((i) => (
            <Image
              src={getManagedImage(i.src)}
              alt={i.alt}
              class={`
            img-fade-in w-full h-full object-cover overflow-clip
            sm:border sm:border-std sm:shadow-std sm:rounded-lg
          `}
              loading="eager"
            />
          ))
      }
      <div
        class:list={[
          "p-[var(--site-space-x)] sm:p-0",
          { "py-[calc(var(--site-space-x)*1.5)]": !image?.length },
        ]}
      >
        <p class="text-title-2">{title}</p>
        <Markdown content={description} class="about-description" />
      </div>
    </div>
    <div
      class={`
        flex flex-wrap gap-y-[var(--site-space-y)] transition-[gap]
    `}
    >
      {
        [locationCard, businessCard, serviceCard].map((card, idx) => (
          <div class="flex-1 basis-[22rem] flex justify-center px-[var(--site-space-x-lg)]">
            <div
              style={`animation-delay: ${idx * 100}ms`}
              class:list={`
                bracket-card max-w-[22rem] transition w-full grid p-8 text-center strict-relational-rows
                motion-safe:opacity-0 intersect:animate-fade-right intersect-once motion-reduce:intersect:animate-none
                md:intersect:animate-fade-up motion-reduce:md:intersect:animate-none 
              `}
            >
              <Icon icon={cardIcons[idx]} class="h-24 mx-auto mb-12" />
              <p class="text-title-3 text-primary">{card.title}</p>
              <Markdown content={card.description} />
            </div>
          </div>
        ))
      }
    </div>
  </div>
</PageSection>

<style>
  .page-section {
    @apply pt-0;

    padding-bottom: calc(var(--about-section-pb) + var(--page-section-py));

    .page-section-inner {
      @apply flex flex-col gap-8;
    }

    .offset-section {
      @apply relative flex flex-col gap-[var(--page-section-py)];

      top: calc(var(--banner-section-pb) * -1);
      margin-bottom: calc(var(--banner-section-pb) * -1);
    }

    .about-description {
      @apply text-empty;
    }

    .bracket-card {
      @apply max-xl:!no-animation-delay;
    }
  }

  @tailwind utilities;
  @layer utilities {
    .strict-relational-rows {
      grid-template-rows: minmax(0, 3fr) minmax(0, 2fr) minmax(0, 3fr);
    }
    .no-animation-delay {
      animation-delay: 0s;
    }
  }
</style>

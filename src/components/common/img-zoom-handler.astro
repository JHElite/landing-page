---
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"div"> {}

const props = Astro.props;
---

<img-zoom-handler {...props}> <slot /> </img-zoom-handler>

<style is:global>
  img-zoom-handler {
    @apply overflow-visible w-full h-full z-10;
    /* display: none; */
  }

  img-zoom-handler > img {
    height: inherit;
    width: inherit;
  }

  .img-zoom {
    /* @apply transition-[width,height,position]; */
  }

  .img-zoomed {
    @apply fixed z-50 max-w-[100vw] inset-0;
    /* @apply -translate-x-1/2 -translate-y-1/2; */
  }

  .img-zoomed::before {
    /* @apply fixed inset-0; */
    /* content: ""; */
    /* background: oklch(0, 0, 0 / 80); */
  }
</style>

<script>
  class ImgZoomHandler extends HTMLElement {
    constructor() {
      super();

      const childImg = this.querySelector<HTMLImageElement>("img");

      this.addEventListener("click", () => {
        if (childImg?.classList.contains("img-zoomed")) {
          childImg?.classList.remove("img-zoomed");
        } else {
          childImg?.classList.add("img-zoomed");
        }
      });
    }
  }

  customElements.define("img-zoom-handler", ImgZoomHandler);
</script>

---
import type { HTMLAttributes } from "astro/types";
import { marked } from "marked";
import { propsWithMergedClasses } from "../../helpers/style";

interface Props extends HTMLAttributes<"div"> {
  content: string;
  noMarginY?: boolean;
  noMarginTop?: boolean;
  noMarginBottom?: boolean;
}

const { content, noMarginY, noMarginTop, noMarginBottom, ...divProps } =
  Astro.props;

marked.use({ gfm: true, breaks: true });
---

<div
  set:html={marked.parse(content)}
  {...propsWithMergedClasses(divProps, [
    "markdown",
    {
      "no-margin-y": noMarginY,
      "no-margin-top": noMarginTop,
      "no-margin-bottom": noMarginBottom,
    },
  ])}
/>

<style is:global>
  .markdown {
    --tw-prose-body: var(--fallback-bc, oklch(var(--bc) / 1)) !important;
    @apply prose max-w-full;
  }

  .markdown blockquote {
    ::before,
    ::after {
      opacity: 0.66;
    }
  }
  .markdown code {
    @apply rounded-md;
  }
  .markdown * {
    @apply text-opacity-100;
    color: currentColor;
  }

  .markdown ul,
  .markdown ul {
    @apply text-left inline-flex flex-col mt-0;
  }

  .markdown li {
    @apply my-0;
  }

  .markdown h1,
  .markdown h2,
  .markdown h3,
  .markdown h4,
  .markdown h5,
  .markdown h6 {
    @apply font-title font-semibold;
  }

  .markdown a {
    font-weight: inherit;
  }

  .markdown.no-margin-y > *,
  .markdown.no-margin-top > * {
    &:first-child {
      margin-top: 0;
    }
  }
  .markdown.no-margin-y > *,
  .markdown.no-margin-bottom > * {
    &:last-child {
      margin-bottom: 0;
    }
  }
</style>

---
import LogoLink from "./logo-link.astro";
---

<header class="sticky -top-80 z-50">
  <div
    id="site-logo"
    class="site-width-content site-px site-py flex justify-center items-center gap-2 h-80"
  >
    <LogoLink variant="large" iconProps={{ class: "h-[6.75rem]" }} />
  </div>
  <div class="glass">
    <nav
      id="site-nav"
      class="site-width-content site-px py-4 flex justify-between"
    >
      <LogoLink
        variant="large"
        id="nav-logo"
        iconProps={{ class: "h-10" }}
        class="-translate-x-8 opacity-0"
      />
      <div class="flex gap-2">
        {
          [
            { pathname: "/", label: "home" },
            { pathname: "/about", label: "about" },
          ].map(({ pathname, label }) => (
            <a
              href={pathname}
              class:list={[
                "btn btn-ghost",
                { "btn-active": Astro.url.pathname === pathname },
              ]}
              data-astro-prefetch
            >
              {label}
            </a>
          ))
        }
      </div>
    </nav>
  </div>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const navLogo = document.getElementById("nav-logo");
    const siteNav = document.getElementById("site-nav");

    // const io = new IntersectionObserver(
    //   (entries) => {
    //     entries.forEach((e) => {
    //       if (!navLogo) return;

    //       if (e.isIntersecting)
    //         navLogo.classList.add("-translate-x-8", "opacity-0");
    //       else {
    //         navLogo.classList.remove("-translate-x-8", "opacity-0");
    //       }
    //     });
    //   },
    //   { threshold: 0.01 },
    // );

    // const siteLogo = document.getElementById("site-logo");
    // if (siteLogo) io.observe(siteLogo);

    // adding transition only after scrolling avoids animation if browser restores place after reload
    window.addEventListener(
      "scroll",
      () => {
        navLogo?.classList.add("transition");
      },
      { once: true },
    );

    const manageNavLogoClasses = () => {
      if (siteNav?.getBoundingClientRect().y === 0) {
        navLogo?.classList.remove("-translate-x-8", "opacity-0");
      } else {
        navLogo?.classList.add("-translate-x-8", "opacity-0");
      }
    };

    manageNavLogoClasses();
    window.addEventListener("scroll", manageNavLogoClasses);
  });
</script>

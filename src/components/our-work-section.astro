---
import { getEntry } from "astro:content";
import { SECTION_DEFS } from "../constants";
import type { ContentSection, OurWork } from "../content/types";
import PageSection from "./common/page-section.astro";
import { makeId } from "../helpers/strings";
import Carousel from "./common/carousel.astro";

const {
  data: { title, galleries },
} = (await getEntry("home-page", "our-work")) as ContentSection<OurWork>;

console.log(`:::GALLERIES::: `, galleries);
const { sectionId, sectionClass } = SECTION_DEFS["our-work"];
---

<PageSection>
  <div id={sectionId} class:list={[sectionClass, "offset-section"]}>
    <div
      class={`
        glass-full glass-card [&&]:px-0 flex flex-col gap-[var(--site-space-x)]
        motion-safe:opacity-0 intersect:animate-fade-up intersect-once intersect-th-0.1 motion-reduce:intersect:animate-none
      `}
    >
      <div class="px-[var(--site-space-x)]">
        <span class="text-title-2">{title}</span>
      </div>
      <ul role="tablist" class="flex justify-center">
        {
          galleries.map((gallery, idx) => (
            <li role="tab">
              <button
                class:list={[
                  "gallery-tab tl-tab tl-tab-x",
                  { "tl-tab--selected": !idx },
                ]}
                data-gallery={makeId(gallery.name)}
              >
                {gallery.name}
              </button>
            </li>
          ))
        }
      </ul>
      {
        galleries.map((gallery, idx) => (
          <Carousel
            images={gallery.images}
            class:list={["gallery-carousel", { hidden: !!idx }]}
            data-gallery={makeId(gallery.name)}
          />
        ))
      }
      <slot name="gallery" />
      <!-- <Carousel images={galleries[0].images} /> -->
    </div>
  </div>
  <slot />
</PageSection>

<script>
  const tabs = document.querySelectorAll<HTMLButtonElement>(".gallery-tab");
  const carousels =
    document.querySelectorAll<HTMLDivElement>(".gallery-carousel");

  tabs.forEach((tab) => {
    const tabGallery = tab.dataset.gallery;

    tab.addEventListener("click", () => {
      tabs.forEach((thisTab) => {
        const thisTabGallery = thisTab.dataset.gallery;
        if (tabGallery === thisTabGallery) {
          thisTab.classList.add("tl-tab--selected");
        } else {
          thisTab.classList.remove("tl-tab--selected");
        }
      });
      carousels.forEach((carousel) => {
        const carouselGallery = carousel.dataset.gallery;
        if (tabGallery === carouselGallery) {
          carousel.classList.remove("hidden");
        } else {
          carousel.classList.add("hidden");
        }
      });
    });
  });
</script>

<style>
  .page-section {
    --carousel-px: var(--site-space-x);
    --carousel-gap: var(--site-space-x);

    @apply pt-0;

    .offset-section {
      @apply relative;
      top: calc(var(--about-section-pb) * -1);
      margin-bottom: calc(var(--about-section-pb) * -1);
    }
  }
</style>
